/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class bbm_webrtc_rtc4j_core_DataChannel */

#ifndef _Included_bbm_webrtc_rtc4j_core_DataChannel
#define _Included_bbm_webrtc_rtc4j_core_DataChannel
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bbm_webrtc_rtc4j_core_DataChannel
 * Method:    nativeSend
 * Signature: (JLjava/nio/ByteBuffer;Z)V
 */
JNIEXPORT void JNICALL Java_bbm_webrtc_rtc4j_core_DataChannel_nativeSend
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bbm_webrtc_rtc4j_core_DataChannel
 * Method:    nativeRegisterObserver
 * Signature: (JLbbm/webrtc/rtc4j/core/observer/DataChannelObserver;)V
 */
JNIEXPORT void JNICALL Java_bbm_webrtc_rtc4j_core_DataChannel_nativeRegisterObserver
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bbm_webrtc_rtc4j_core_DataChannel
 * Method:    nativeGetLabel
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bbm_webrtc_rtc4j_core_DataChannel_nativeGetLabel
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bbm_webrtc_rtc4j_core_DataChannel
 * Method:    nativeIsOpen
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bbm_webrtc_rtc4j_core_DataChannel_nativeIsOpen
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bbm_webrtc_rtc4j_core_DataChannel
 * Method:    free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bbm_webrtc_rtc4j_core_DataChannel_free
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
